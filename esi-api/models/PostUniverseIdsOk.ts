/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.7.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PostUniverseIdsAgent,
    PostUniverseIdsAgentFromJSON,
    PostUniverseIdsAgentFromJSONTyped,
    PostUniverseIdsAgentToJSON,
    PostUniverseIdsAlliance,
    PostUniverseIdsAllianceFromJSON,
    PostUniverseIdsAllianceFromJSONTyped,
    PostUniverseIdsAllianceToJSON,
    PostUniverseIdsCharacter,
    PostUniverseIdsCharacterFromJSON,
    PostUniverseIdsCharacterFromJSONTyped,
    PostUniverseIdsCharacterToJSON,
    PostUniverseIdsConstellation,
    PostUniverseIdsConstellationFromJSON,
    PostUniverseIdsConstellationFromJSONTyped,
    PostUniverseIdsConstellationToJSON,
    PostUniverseIdsCorporation,
    PostUniverseIdsCorporationFromJSON,
    PostUniverseIdsCorporationFromJSONTyped,
    PostUniverseIdsCorporationToJSON,
    PostUniverseIdsFaction,
    PostUniverseIdsFactionFromJSON,
    PostUniverseIdsFactionFromJSONTyped,
    PostUniverseIdsFactionToJSON,
    PostUniverseIdsInventoryType,
    PostUniverseIdsInventoryTypeFromJSON,
    PostUniverseIdsInventoryTypeFromJSONTyped,
    PostUniverseIdsInventoryTypeToJSON,
    PostUniverseIdsRegion,
    PostUniverseIdsRegionFromJSON,
    PostUniverseIdsRegionFromJSONTyped,
    PostUniverseIdsRegionToJSON,
    PostUniverseIdsStation,
    PostUniverseIdsStationFromJSON,
    PostUniverseIdsStationFromJSONTyped,
    PostUniverseIdsStationToJSON,
    PostUniverseIdsSystem,
    PostUniverseIdsSystemFromJSON,
    PostUniverseIdsSystemFromJSONTyped,
    PostUniverseIdsSystemToJSON,
} from './';

/**
 * 200 ok object
 * @export
 * @interface PostUniverseIdsOk
 */
export interface PostUniverseIdsOk {
    /**
     * agents array
     * @type {Array<PostUniverseIdsAgent>}
     * @memberof PostUniverseIdsOk
     */
    agents?: Array<PostUniverseIdsAgent>;
    /**
     * alliances array
     * @type {Array<PostUniverseIdsAlliance>}
     * @memberof PostUniverseIdsOk
     */
    alliances?: Array<PostUniverseIdsAlliance>;
    /**
     * characters array
     * @type {Array<PostUniverseIdsCharacter>}
     * @memberof PostUniverseIdsOk
     */
    characters?: Array<PostUniverseIdsCharacter>;
    /**
     * constellations array
     * @type {Array<PostUniverseIdsConstellation>}
     * @memberof PostUniverseIdsOk
     */
    constellations?: Array<PostUniverseIdsConstellation>;
    /**
     * corporations array
     * @type {Array<PostUniverseIdsCorporation>}
     * @memberof PostUniverseIdsOk
     */
    corporations?: Array<PostUniverseIdsCorporation>;
    /**
     * factions array
     * @type {Array<PostUniverseIdsFaction>}
     * @memberof PostUniverseIdsOk
     */
    factions?: Array<PostUniverseIdsFaction>;
    /**
     * inventory_types array
     * @type {Array<PostUniverseIdsInventoryType>}
     * @memberof PostUniverseIdsOk
     */
    inventoryTypes?: Array<PostUniverseIdsInventoryType>;
    /**
     * regions array
     * @type {Array<PostUniverseIdsRegion>}
     * @memberof PostUniverseIdsOk
     */
    regions?: Array<PostUniverseIdsRegion>;
    /**
     * stations array
     * @type {Array<PostUniverseIdsStation>}
     * @memberof PostUniverseIdsOk
     */
    stations?: Array<PostUniverseIdsStation>;
    /**
     * systems array
     * @type {Array<PostUniverseIdsSystem>}
     * @memberof PostUniverseIdsOk
     */
    systems?: Array<PostUniverseIdsSystem>;
}

export function PostUniverseIdsOkFromJSON(json: any): PostUniverseIdsOk {
    return PostUniverseIdsOkFromJSONTyped(json, false);
}

export function PostUniverseIdsOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostUniverseIdsOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agents': !exists(json, 'agents') ? undefined : ((json['agents'] as Array<any>).map(PostUniverseIdsAgentFromJSON)),
        'alliances': !exists(json, 'alliances') ? undefined : ((json['alliances'] as Array<any>).map(PostUniverseIdsAllianceFromJSON)),
        'characters': !exists(json, 'characters') ? undefined : ((json['characters'] as Array<any>).map(PostUniverseIdsCharacterFromJSON)),
        'constellations': !exists(json, 'constellations') ? undefined : ((json['constellations'] as Array<any>).map(PostUniverseIdsConstellationFromJSON)),
        'corporations': !exists(json, 'corporations') ? undefined : ((json['corporations'] as Array<any>).map(PostUniverseIdsCorporationFromJSON)),
        'factions': !exists(json, 'factions') ? undefined : ((json['factions'] as Array<any>).map(PostUniverseIdsFactionFromJSON)),
        'inventoryTypes': !exists(json, 'inventory_types') ? undefined : ((json['inventory_types'] as Array<any>).map(PostUniverseIdsInventoryTypeFromJSON)),
        'regions': !exists(json, 'regions') ? undefined : ((json['regions'] as Array<any>).map(PostUniverseIdsRegionFromJSON)),
        'stations': !exists(json, 'stations') ? undefined : ((json['stations'] as Array<any>).map(PostUniverseIdsStationFromJSON)),
        'systems': !exists(json, 'systems') ? undefined : ((json['systems'] as Array<any>).map(PostUniverseIdsSystemFromJSON)),
    };
}

export function PostUniverseIdsOkToJSON(value?: PostUniverseIdsOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agents': value.agents === undefined ? undefined : ((value.agents as Array<any>).map(PostUniverseIdsAgentToJSON)),
        'alliances': value.alliances === undefined ? undefined : ((value.alliances as Array<any>).map(PostUniverseIdsAllianceToJSON)),
        'characters': value.characters === undefined ? undefined : ((value.characters as Array<any>).map(PostUniverseIdsCharacterToJSON)),
        'constellations': value.constellations === undefined ? undefined : ((value.constellations as Array<any>).map(PostUniverseIdsConstellationToJSON)),
        'corporations': value.corporations === undefined ? undefined : ((value.corporations as Array<any>).map(PostUniverseIdsCorporationToJSON)),
        'factions': value.factions === undefined ? undefined : ((value.factions as Array<any>).map(PostUniverseIdsFactionToJSON)),
        'inventory_types': value.inventoryTypes === undefined ? undefined : ((value.inventoryTypes as Array<any>).map(PostUniverseIdsInventoryTypeToJSON)),
        'regions': value.regions === undefined ? undefined : ((value.regions as Array<any>).map(PostUniverseIdsRegionToJSON)),
        'stations': value.stations === undefined ? undefined : ((value.stations as Array<any>).map(PostUniverseIdsStationToJSON)),
        'systems': value.systems === undefined ? undefined : ((value.systems as Array<any>).map(PostUniverseIdsSystemToJSON)),
    };
}


